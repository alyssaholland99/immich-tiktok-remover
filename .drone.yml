# Common settings for Docker builds
common_docker_settings:
  username: { from_secret: DOCKERHUB_USER }
  password: { from_secret: DOCKERHUB_PASS }
  repo: { from_secret: DOCKERHUB_REPOSITORY }

# Build tags configuration
build_tags:
  stable: "stable"
  stable-lite: "stable-lite"
  stable-arm: "stable-arm"
  stable-lite-arm: "stable-lite-arm"

---

kind: pipeline
type: docker
name: stable

trigger:
  event:
    - push
    - tag

steps:
  - name: build-stable
    image: plugins/docker
    settings:
      <<: *common_docker_settings
      tags:
        - $build_tags.stable

  - name: tag-stable
    image: plugins/docker
    when:
      event:
        include: [tag]
      ref:
        include: [refs/tags/v*]
    settings:
      <<: *common_docker_settings
      tags:
        - $build_tags.stable
        - ${DRONE_TAG}

---

kind: pipeline
type: docker
name: stable-lite

trigger:
  event:
    - push
    - tag

steps:
  - name: setup-lite
    when:
      event:
        include: [push]
    image: plugins/docker
    commands:
      - ./make_lite.sh

  - name: build-stable-lite
    image: plugins/docker
    settings:
      <<: *common_docker_settings
      tags:
        - $build_tags.stable-lite

  - name: tag-stable-lite
    image: plugins/docker
    when:
      event:
        include: [tag]
      ref:
        include: [refs/tags/v*]
    settings:
      <<: *common_docker_settings
      tags:
        - $build_tags.stable-lite
        - ${DRONE_TAG}-lite

---

kind: pipeline
type: docker
name: stable-arm

trigger:
  event:
    - push
    - tag

platform:
  os: linux
  arch: arm

steps:
  - name: build-stable-arm
    image: plugins/docker
    settings:
      <<: *common_docker_settings
      tags:
        - $build_tags.stable-arm

  - name: tag-stable-arm
    image: plugins/docker
    when:
      event:
        include: [tag]
      ref:
        include: [refs/tags/v*]
    settings:
      <<: *common_docker_settings
      tags:
        - $build_tags.stable-arm
        - ${DRONE_TAG}-arm

---

kind: pipeline
type: docker
name: stable-lite-arm

trigger:
  event:
    - push
    - tag

platform:
  os: linux
  arch: arm

steps:
  - name: setup-lite
    when:
      event:
        include: [push]
    image: plugins/docker
    commands:
      - ./make_lite.sh

  - name: build-stable-lite-arm
    image: plugins/docker
    settings:
      <<: *common_docker_settings
      tags:
        - $build_tags.stable-lite-arm

  - name: tag-stable-lite-arm
    image: plugins/docker
    when:
      event:
        include: [tag]
      ref:
        include: [refs/tags/v*]
    settings:
      <<: *common_docker_settings
      tags:
        - $build_tags.stable-lite-arm
        - ${DRONE_TAG}-lite-arm

---

kind: pipeline
type: docker
name: other-branches

trigger:
  event:
    - push
  branch:
    exclude:
      - master
      - feature/*
      - stable/*
      - stable-lite/*
      - docker_image_lite

steps:
  - name: build-feature
    when:
      branch:
        include: [feature/*]
    image: plugins/docker
    settings:
      <<: *common_docker_settings
      tags:
        - edgerunner

  - name: build-testing
    image: plugins/docker
    settings:
      <<: *common_docker_settings
      tags:
        - testing

---

kind: pipeline
type: docker
name: test-image

trigger:
  event:
    - push
  branch:
    include:
      - only-for-testing

steps:
  - name: test-image
    image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - sleep 5 # give docker enough time to start
      - ls ./testing/docker
      - /bin/sh ./testing/docker/setup_time.sh
      - /bin/sh ./testing/docker/setup_compose.sh
      - /bin/sh ./testing/docker/restore_db.sh
      - /bin/sh ./testing/docker/setup_videos.sh
      - /bin/sh ./testing/docker/run_tiktok_remover.sh
      - /bin/sh ./testing/docker/check_itr_output.sh
      - /bin/sh ./testing/docker/cleanup.sh

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}
